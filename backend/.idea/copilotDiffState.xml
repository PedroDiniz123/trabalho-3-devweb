<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/jpbarreiro/trabalho2devweb/controller/AlunoController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/jpbarreiro/trabalho2devweb/controller/AlunoController.java" />
              <option name="originalContent" value="package com.jpbarreiro.trabalho2devweb.controller;&#10;&#10;import com.jpbarreiro.trabalho2devweb.dto.AlunoDTO;&#10;import com.jpbarreiro.trabalho2devweb.service.AlunoService;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import java.util.List;&#10;&#10;@RestController&#10;@RequestMapping(&quot;/api/alunos&quot;)&#10;@CrossOrigin(origins = &quot;http://localhost:3000&quot;)&#10;public class AlunoController {&#10;&#10;    private final AlunoService service;&#10;&#10;    public AlunoController(AlunoService service) {&#10;        this.service = service;&#10;    }&#10;&#10;    @PostMapping&#10;    public ResponseEntity&lt;AlunoDTO&gt; create(@RequestBody AlunoDTO dto) {&#10;        return ResponseEntity.ok(service.create(dto));&#10;    }&#10;&#10;    @PutMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;AlunoDTO&gt; update(@PathVariable Long id, @RequestBody AlunoDTO dto) {&#10;        return ResponseEntity.ok(service.update(id, dto));&#10;    }&#10;&#10;    @DeleteMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Void&gt; delete(@PathVariable Long id) {&#10;        service.delete(id);&#10;        return ResponseEntity.noContent().build();&#10;    }&#10;&#10;    @GetMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;AlunoDTO&gt; findById(@PathVariable Long id) {&#10;        return ResponseEntity.ok(service.findById(id));&#10;    }&#10;&#10;    @GetMapping&#10;    public ResponseEntity&lt;List&lt;AlunoDTO&gt;&gt; findAll() {&#10;        return ResponseEntity.ok(service.findAll());&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.jpbarreiro.trabalho2devweb.controller;&#13;&#10;&#13;&#10;import com.jpbarreiro.trabalho2devweb.dto.AlunoDTO;&#13;&#10;import com.jpbarreiro.trabalho2devweb.service.AlunoService;&#13;&#10;import org.springframework.http.ResponseEntity;&#13;&#10;import org.springframework.web.bind.annotation.*;&#13;&#10;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;@RestController&#13;&#10;@RequestMapping(&quot;/api/alunos&quot;)&#13;&#10;@CrossOrigin(origins = &quot;http://localhost:3000&quot;)&#13;&#10;public class AlunoController {&#13;&#10;&#13;&#10;    private final AlunoService service;&#13;&#10;&#13;&#10;    public AlunoController(AlunoService service) {&#13;&#10;        this.service = service;&#13;&#10;    }&#13;&#10;&#13;&#10;    @PostMapping&#13;&#10;    public ResponseEntity&lt;AlunoDTO&gt; create(@RequestBody AlunoDTO dto) {&#13;&#10;        return ResponseEntity.ok(service.create(dto));&#13;&#10;    }&#13;&#10;&#13;&#10;    @PutMapping(&quot;/{id}&quot;)&#13;&#10;    public ResponseEntity&lt;AlunoDTO&gt; update(@PathVariable Long id, @RequestBody AlunoDTO dto) {&#13;&#10;        return ResponseEntity.ok(service.update(id, dto));&#13;&#10;    }&#13;&#10;&#13;&#10;    @DeleteMapping(&quot;/{id}&quot;)&#13;&#10;    public ResponseEntity&lt;Void&gt; delete(@PathVariable Long id) {&#13;&#10;        service.delete(id);&#13;&#10;        return ResponseEntity.noContent().build();&#13;&#10;    }&#13;&#10;&#13;&#10;    @GetMapping(&quot;/{id}&quot;)&#13;&#10;    public ResponseEntity&lt;AlunoDTO&gt; findById(@PathVariable Long id) {&#13;&#10;        return ResponseEntity.ok(service.findById(id));&#13;&#10;    }&#13;&#10;&#13;&#10;    @GetMapping&#13;&#10;    public ResponseEntity&lt;List&lt;AlunoDTO&gt;&gt; findAll() {&#13;&#10;        return ResponseEntity.ok(service.findAll());&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>