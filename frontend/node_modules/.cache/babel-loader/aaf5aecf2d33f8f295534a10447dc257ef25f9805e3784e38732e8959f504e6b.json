{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8081/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const apiService = {\n  // Alunos\n  getAlunos: async () => {\n    const response = await api.get('/alunos');\n    return response.data;\n  },\n  getAluno: async id => {\n    const response = await api.get(`/alunos/${id}`);\n    return response.data;\n  },\n  // Professores\n  getProfessores: async () => {\n    const response = await api.get('/professores');\n    return response.data;\n  },\n  getProfessor: async id => {\n    const response = await api.get(`/professores/${id}`);\n    return response.data;\n  },\n  // Turmas\n  getTurmas: async () => {\n    const response = await api.get('/turmas');\n    return response.data;\n  },\n  getTurma: async id => {\n    const response = await api.get(`/turmas/${id}`);\n    return response.data;\n  },\n  // Inscrições\n  getInscricoes: async () => {\n    const response = await api.get('/inscricoes');\n    return response.data;\n  },\n  getInscricao: async id => {\n    const response = await api.get(`/inscricoes/${id}`);\n    return response.data;\n  },\n  // Obter alunos inscritos em uma turma específica\n  getAlunosPorTurma: async turmaId => {\n    const [inscricoes, alunos] = await Promise.all([api.get('/inscricoes'), api.get('/alunos')]);\n    const inscricoesDaTurma = inscricoes.data.filter(inscricao => inscricao.turmaId === turmaId);\n    const alunoIds = inscricoesDaTurma.map(inscricao => inscricao.alunoId);\n    return alunos.data.filter(aluno => alunoIds.includes(aluno.id));\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","apiService","getAlunos","response","get","data","getAluno","id","getProfessores","getProfessor","getTurmas","getTurma","getInscricoes","getInscricao","getAlunosPorTurma","turmaId","inscricoes","alunos","Promise","all","inscricoesDaTurma","filter","inscricao","alunoIds","map","alunoId","aluno","includes"],"sources":["F:/Desktop/trab/devweb/trabalho-3-devweb/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Aluno, Professor, Turma, Inscricao } from '../types';\r\n\r\nconst API_BASE_URL = 'http://localhost:8081/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport const apiService = {\r\n  // Alunos\r\n  getAlunos: async (): Promise<Aluno[]> => {\r\n    const response = await api.get('/alunos');\r\n    return response.data;\r\n  },\r\n\r\n  getAluno: async (id: number): Promise<Aluno> => {\r\n    const response = await api.get(`/alunos/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Professores\r\n  getProfessores: async (): Promise<Professor[]> => {\r\n    const response = await api.get('/professores');\r\n    return response.data;\r\n  },\r\n\r\n  getProfessor: async (id: number): Promise<Professor> => {\r\n    const response = await api.get(`/professores/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Turmas\r\n  getTurmas: async (): Promise<Turma[]> => {\r\n    const response = await api.get('/turmas');\r\n    return response.data;\r\n  },\r\n\r\n  getTurma: async (id: number): Promise<Turma> => {\r\n    const response = await api.get(`/turmas/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Inscrições\r\n  getInscricoes: async (): Promise<Inscricao[]> => {\r\n    const response = await api.get('/inscricoes');\r\n    return response.data;\r\n  },\r\n\r\n  getInscricao: async (id: number): Promise<Inscricao> => {\r\n    const response = await api.get(`/inscricoes/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Obter alunos inscritos em uma turma específica\r\n  getAlunosPorTurma: async (turmaId: number): Promise<Aluno[]> => {\r\n    const [inscricoes, alunos] = await Promise.all([\r\n      api.get('/inscricoes'),\r\n      api.get('/alunos')\r\n    ]);\r\n\r\n    const inscricoesDaTurma = inscricoes.data.filter((inscricao: Inscricao) =>\r\n      inscricao.turmaId === turmaId\r\n    );\r\n\r\n    const alunoIds = inscricoesDaTurma.map((inscricao: Inscricao) => inscricao.alunoId);\r\n\r\n    return alunos.data.filter((aluno: Aluno) => alunoIds.includes(aluno.id));\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,SAAS,EAAE,MAAAA,CAAA,KAA8B;IACvC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,QAAQ,EAAE,MAAOC,EAAU,IAAqB;IAC9C,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAWG,EAAE,EAAE,CAAC;IAC/C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,cAAc,EAAE,MAAAA,CAAA,KAAkC;IAChD,MAAML,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDI,YAAY,EAAE,MAAOF,EAAU,IAAyB;IACtD,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,gBAAgBG,EAAE,EAAE,CAAC;IACpD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAK,SAAS,EAAE,MAAAA,CAAA,KAA8B;IACvC,MAAMP,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,QAAQ,EAAE,MAAOJ,EAAU,IAAqB;IAC9C,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAWG,EAAE,EAAE,CAAC;IAC/C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAO,aAAa,EAAE,MAAAA,CAAA,KAAkC;IAC/C,MAAMT,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDQ,YAAY,EAAE,MAAON,EAAU,IAAyB;IACtD,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,eAAeG,EAAE,EAAE,CAAC;IACnD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAS,iBAAiB,EAAE,MAAOC,OAAe,IAAuB;IAC9D,MAAM,CAACC,UAAU,EAAEC,MAAM,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7CvB,GAAG,CAACQ,GAAG,CAAC,aAAa,CAAC,EACtBR,GAAG,CAACQ,GAAG,CAAC,SAAS,CAAC,CACnB,CAAC;IAEF,MAAMgB,iBAAiB,GAAGJ,UAAU,CAACX,IAAI,CAACgB,MAAM,CAAEC,SAAoB,IACpEA,SAAS,CAACP,OAAO,KAAKA,OACxB,CAAC;IAED,MAAMQ,QAAQ,GAAGH,iBAAiB,CAACI,GAAG,CAAEF,SAAoB,IAAKA,SAAS,CAACG,OAAO,CAAC;IAEnF,OAAOR,MAAM,CAACZ,IAAI,CAACgB,MAAM,CAAEK,KAAY,IAAKH,QAAQ,CAACI,QAAQ,CAACD,KAAK,CAACnB,EAAE,CAAC,CAAC;EAC1E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}